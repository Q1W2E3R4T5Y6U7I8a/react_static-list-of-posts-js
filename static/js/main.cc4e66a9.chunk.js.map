{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","App","postsFromServer","usersFromServer","find","userId","commentsFromServer","filter","postId","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAC/C,wCACA,mBAAGD,UAAU,qBAAqBE,KAAI,iBAAYH,EAAQI,OAA1D,SACGJ,EAAQI,WAGb,qBAAKH,UAAU,oBAAf,SAAoCD,EAAQK,WCNnCC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,OAAS,EACjBD,EAASE,KAAI,SAAAT,GAAO,OAClB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQU,OAG5B,mBAAG,UAAQ,oBAAX,iCCROC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OAAKA,EAKH,8BACE,+CACA,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,UAPH,OCCEW,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,EAAKC,QACtC,cAAC,EAAD,CAAUH,KAAME,EAAKF,UAEvB,mBAAGX,UAAU,iBAAb,SAA+Ba,EAAKT,OACpC,uBACA,cAAC,EAAD,CAAaE,SAAUO,EAAKP,gBCXnBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,UCSbQ,EAAM,WACjB,IAAMD,OARNE,EAAgBV,KAAI,SAAAK,GAAI,kCACnBA,GADmB,IAEtBF,KAAMQ,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOI,EAAKQ,WAAW,KAC/Df,SAAUgB,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWX,EAAKJ,WAOzE,OACE,0BAAST,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QChBvBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cc4e66a9.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n      <span> by </span>\n      <a className=\"CommentInfo__email\" href={`mailto:${comment.email}`}>\n        {comment.email}\n      </a>\n    </div>\n    <div className=\"CommentInfo__body\">{comment.body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length > 0 ? (\n      comments.map(comment => (\n        <CommentInfo key={comment.id} comment={comment} />\n      ))\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <p>\n      <span> Posted by </span>\n      <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n        {user.name}\n      </a>\n    </p>\n  );\n};\n","\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n      <UserInfo user={post.user} />\n    </div>\n    <p className=\"PostInfo__body\">{post.body}</p>\n    <hr />\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst preparePosts = () => {\n  postsFromServer.map(post => ({\n    ...post,\n    user: usersFromServer.find(user => user.id === post.userId) || null,\n    comments: commentsFromServer.filter(comment => comment.postId === post.id),\n  }));\n};\n\nexport const App = () => {\n  const posts = preparePosts();\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n      <PostList posts={posts} />\n    </section>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}